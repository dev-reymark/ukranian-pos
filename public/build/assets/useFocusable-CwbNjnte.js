import{s as l,i as $,v as u,w as p,a as b,x as P}from"./chunk-XHQUSKIE-DXaFXxBl.js";import{k as f,r as s,R as x}from"./app-CU-WO1ha.js";const v=new Set(["id"]),h=new Set(["aria-label","aria-labelledby","aria-describedby","aria-details"]),y=new Set(["href","hrefLang","target","rel","download","ping","referrerPolicy"]),D=/^(data-.*)$/;function E(e,t={}){let{labelable:a,isLink:o,propNames:n}=t,c={};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(v.has(r)||a&&h.has(r)||o&&y.has(r)||n!=null&&n.has(r)||D.test(r))&&(c[r]=e[r]);return c}function i(e){if(!e)return;let t=!0;return a=>{let o={...a,preventDefault(){a.preventDefault()},isDefaultPrevented(){return a.isDefaultPrevented()},stopPropagation(){console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.")},continuePropagation(){t=!1}};e(o),t&&a.stopPropagation()}}function m(e){return{keyboardProps:e.isDisabled?{}:{onKeyDown:i(e.onKeyDown),onKeyUp:i(e.onKeyUp)}}}function w(e){const t=l(e);if($()==="virtual"){let a=t.activeElement;u(()=>{t.activeElement===a&&e.isConnected&&f(e)})}else f(e)}let g=x.createContext(null);function k(e){let t=s.useContext(g)||{};P(t,e);let{ref:a,...o}=t;return o}function N(e,t){let{focusProps:a}=p(e),{keyboardProps:o}=m(e),n=b(a,o),c=k(t),r=e.isDisabled?{}:c,d=s.useRef(e.autoFocus);return s.useEffect(()=>{d.current&&t.current&&w(t.current),d.current=!1},[t]),{focusableProps:b({...n,tabIndex:e.excludeFromTabOrder&&!e.isDisabled?-1:void 0},r)}}export{E as $,N as a,w as b};
